(defcfg
    process-unmapped-keys yes
)

(defvar
  tap-time 200
  hold-time 250
)

(defalias
  sym (layer-while-held asert_sym)
  to_extra (layer-switch asert_extra)
  to_base (layer-switch asert_base)
  escctrl (multi f24 (tap-hold $tap-time $hold-time esc lctl))
  spcshift (multi f24 (tap-hold $tap-time $hold-time spc lsft)) 
  a-sym (multi f24 (tap-hold $tap-time $hold-time a @sym))
  s-met (multi f24 (tap-hold $tap-time $hold-time s lmet))
  e-alt (multi f24 (tap-hold $tap-time $hold-time e lalt))
  r-ctl (multi f24 (tap-hold $tap-time $hold-time r lctl))
  h-ctl (multi f24 (tap-hold $tap-time $hold-time h rctl))
  j-alt (multi f24 (tap-hold $tap-time $hold-time j lalt))
  l-met (multi f24 (tap-hold $tap-time $hold-time l rmet))
  p-sym (multi f24 (tap-hold $tap-time $hold-time p @sym))
  left_m  (multi f24 (tap-hold $tap-time $hold-time left  lctl))
  down_a  (multi f24 (tap-hold $tap-time $hold-time down  lalt))
  right_c (multi f24 (tap-hold $tap-time $hold-time right lmet))
  4-ctl (multi f24 (tap-hold $tap-time $hold-time 4 rctl))
  5-alt (multi f24 (tap-hold $tap-time $hold-time 5 lalt))
  6-met (multi f24 (tap-hold $tap-time $hold-time 6 rmet))
)

(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl    lmet    lalt    spc    ralt
)

(deflayer asert_base
  grv         =         1       2       3       4      5     -      6       7       8       9      0      bspc
  tab      @to_extra    q       w       d       f      g     '      i       k       o       ;      bspc   \
  @escctrl    esc     @a-sym  @s-met  @e-alt  @r-ctl   t     u    @h-ctl  @j-alt  @l-met  @p-sym   ret
  lsft         z        x       c       v       b      ,     y      n       m       .      rsft
  lctl    lmet    lalt    @spcshift    ralt
)

(deflayer asert_extra
  grv      f1      f2      f3      f4       f5       f6     f7     f8      f9     f10     f11    f12    bspc
  tab   @to_base   tab    home     up       end     pgup    0       7       8      9       =     bspc   \
  esc      del     ins  @left_m  @down_a  @right_c  pgdn    /    @4-ctl  @5-alt  @6-met    -     ret
  lsft     grv      ,      \        .        ;       [      1       2       3      ]      rsft
  lctl    lmet    lalt    @spcshift    ralt
)

(deflayer asert_sym
  grv      f1     f2      f3     f4     f5     f6    f7    f8      f9     f10    f11    f12     bspc
  tab       _     tab    home    up     end   pgup   S-0   S-7    S-8     S-9     =     bspc    \
  esc      del    ins    left   down   right  pgdn    /    S-4    S-5     S-6     -     ret
  lsft     grv     ,      \       .      ;     [     S-1   S-2    S-3      ]     rsft
  lctl    lmet    lalt    @spcshift    ralt
)


